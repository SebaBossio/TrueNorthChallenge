// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TrueNorthChallenge.DAL;

namespace TrueNorthChallenge.DAL.Migrations
{
    [DbContext(typeof(TrueNorthContext))]
    [Migration("20210608041754_InitialCommit")]
    partial class InitialCommit
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TrueNorthChallenge.DBEntities.Post", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CTS")
                        .HasColumnType("DATETIME");

                    b.Property<string>("Content")
                        .HasColumnType("VARCHAR(MAX)");

                    b.Property<string>("CreatedById")
                        .HasColumnType("VARCHAR(50)");

                    b.Property<DateTime?>("MTS")
                        .HasColumnType("DATETIME");

                    b.Property<string>("ModifiedById")
                        .HasColumnType("VARCHAR(50)");

                    b.Property<string>("Title")
                        .HasColumnType("VARCHAR(500)");

                    b.HasKey("Id");

                    b.ToTable("Posts", "dbo");
                });

            modelBuilder.Entity("TrueNorthChallenge.DBEntities.Posts_Tags", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CTS")
                        .HasColumnType("DATETIME");

                    b.Property<string>("CreatedById")
                        .HasColumnType("VARCHAR(50)");

                    b.Property<DateTime?>("MTS")
                        .HasColumnType("DATETIME");

                    b.Property<string>("ModifiedById")
                        .HasColumnType("VARCHAR(50)");

                    b.Property<int>("PostId")
                        .HasColumnType("INT");

                    b.Property<int>("TagId")
                        .HasColumnType("INT");

                    b.HasKey("Id");

                    b.HasIndex("PostId");

                    b.HasIndex("TagId");

                    b.ToTable("Posts_Tags", "dbo");
                });

            modelBuilder.Entity("TrueNorthChallenge.DBEntities.Tag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CTS")
                        .HasColumnType("DATETIME");

                    b.Property<string>("CreatedById")
                        .HasColumnType("VARCHAR(50)");

                    b.Property<DateTime?>("MTS")
                        .HasColumnType("DATETIME");

                    b.Property<string>("ModifiedById")
                        .HasColumnType("VARCHAR(50)");

                    b.Property<string>("Name")
                        .HasColumnType("VARCHAR(500)");

                    b.HasKey("Id");

                    b.ToTable("Tag", "dbo");
                });

            modelBuilder.Entity("TrueNorthChallenge.DBEntities.Posts_Tags", b =>
                {
                    b.HasOne("TrueNorthChallenge.DBEntities.Post", "Post")
                        .WithMany("Posts_Tags")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TrueNorthChallenge.DBEntities.Tag", "Tag")
                        .WithMany("Posts_Tags")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Post");

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("TrueNorthChallenge.DBEntities.Post", b =>
                {
                    b.Navigation("Posts_Tags");
                });

            modelBuilder.Entity("TrueNorthChallenge.DBEntities.Tag", b =>
                {
                    b.Navigation("Posts_Tags");
                });
#pragma warning restore 612, 618
        }
    }
}
